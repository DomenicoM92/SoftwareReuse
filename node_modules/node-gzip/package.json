{
  "_from": "node-gzip",
  "_id": "node-gzip@1.1.2",
  "_inBundle": false,
  "_integrity": "sha512-ZB6zWpfZHGtxZnPMrJSKHVPrRjURoUzaDbLFj3VO70mpLTW5np96vXyHwft4Id0o+PYIzgDkBUjIzaNHhQ8srw==",
  "_location": "/node-gzip",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "node-gzip",
    "fetchSpec": "latest",
    "name": "node-gzip",
    "raw": "node-gzip",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/node-gzip/-/node-gzip-1.1.2.tgz",
  "_shasum": "245bd171b31ce7c7f50fc4cd0ca7195534359afb",
  "_spec": "node-gzip",
  "_where": "/home/dom/Desktop/SoftwareReuse",
  "author": {
    "name": "Rebsos"
  },
  "bugs": {
    "url": "https://github.com/Rebsos/node-gzip/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Simply gzip and ungzip in Node.js with promises",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-preset-env": "^1.6.1"
  },
  "homepage": "https://github.com/Rebsos/node-gzip#readme",
  "keywords": [
    "async",
    "await",
    "compress",
    "decompress",
    "gunzip",
    "gz",
    "gzip",
    "node",
    "promise",
    "promises",
    "uncompress",
    "ungzip",
    "zlib"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "name": "node-gzip",
  "optionalDependencies": {},
  "readme": "# node-gzip\r\n> Gzip and ungzip in Node.js\r\n\r\nTiny and easy to use wrapper around [zlib.gzip](https://nodejs.org/api/zlib.html#zlib_zlib_gzip_buffer_options_callback) and [zlib.gunzip](https://nodejs.org/api/zlib.html#zlib_zlib_gunzip_buffer_options_callback) to support promises.\r\n\r\n```js\r\nconst compressed = await gzip('Hello World');\r\n```\r\n\r\n## Install\r\n```sh\r\nnpm install node-gzip --save\r\n```\r\n\r\n\r\n\r\n## Examples\r\n\r\n#### With Promises\r\n\r\n```js\r\nconst {gzip, ungzip} = require('node-gzip');\r\n\r\ngzip('Hello World')\r\n  .then((compressed) => {\r\n    return ungzip(compressed);\r\n  })\r\n  .then((decompressed) => {\r\n    console.log(decompressed.toString());     //Hello World\r\n  });\r\n```\r\n\r\n#### With async / await\r\n\r\n```js\r\nconst {gzip, ungzip} = require('node-gzip');\r\n\r\nconst compressed = await gzip('Hello World');\r\n\r\nconst decompressed = await ungzip(compressed);\r\n\r\nconsole.log(decompressed.toString());        //Hello World\r\n```\r\n\r\n\r\n\r\n\r\n## Options\r\n\r\nPass options just like with [Zlib](https://nodejs.org/api/zlib.html). See all [options](https://nodejs.org/api/zlib.html#zlib_class_options).\r\n\r\n```js\r\nawait gzip('Hello World', {...});\r\n```\r\n\r\n## Description\r\n\r\n#### gzip(input[,options])\r\n\r\n* input: `Buffer | TypedArray | DataView | ArrayBuffer | string`\r\n* returns: `Buffer`\r\n\r\n#### ungzip(input[,options])\r\n\r\n* input: `Buffer | TypedArray | DataView | ArrayBuffer | string`\r\n* returns: `Buffer`\r\n\r\nUse `toString()` after `ungzip` to convert the Buffer into a string.\r\n\r\nSupports Node.js version 0.12 and higher.\r\n\r\n---\r\n\r\n### License\r\n\r\nnode-gzip is [MIT licensed](./LICENSE).\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/Rebsos/node-gzip.git"
  },
  "scripts": {
    "build": "rm -rf dist && mkdir dist && babel src --out-dir dist"
  },
  "version": "1.1.2"
}
